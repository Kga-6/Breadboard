rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // THE FIX: Allow any authenticated user to READ public user profiles.
      allow read: if request.auth != null;

      // Allow a user to CREATE their own document.
      allow create: if request.auth != null;
      
      // Only allow a user to UPDATE or DELETE their own document.
      allow update, delete: if request.auth != null && request.auth.uid == userId;

      // Rules for the 'friends' subcollection
      match /friends/{friendId} {
          allow read: if request.auth != null && request.auth.uid == userId;
      }
    }

    match /friendRequests/{requestId} {
      // Allow read if the user is the sender or receiver
      allow read: if request.auth != null && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
      
      // Allow any authenticated user to create a request
      allow create: if request.auth != null;
      
      // Allow the recipient to update (accept/decline) or the sender to delete (cancel)
      allow update, delete: if request.auth != null && (request.auth.uid == resource.data.to || request.auth.uid == resource.data.from);
    }

    match /jams/{jamId} {
      // Allow creation only if the creator sets themselves as the 'owner'
      // and is also the designated 'authorId'.
      allow create: if request.auth != null &&
        request.resource.data.authorId == request.auth.uid &&
        request.resource.data.permissions[request.auth.uid] == 'owner';

      // Allow reads if:
      // 1. The jam is public.
      // 2. The user has a role in the permissions map.
      allow read: if resource.data.isPublic == true ||
        (request.auth != null && request.auth.uid in resource.data.permissions);

      // Allow updates if:
      // 1. The jam is public and public access is 'editor'
      // 2. The user is an 'owner' or 'editor'
      allow update: if (resource.data.isPublic == true && resource.data.publicAccess == 'editor') ||
        (request.auth != null && resource.data.permissions[request.auth.uid] in ['owner', 'editor']);

      // Allow deletion only if the user is the owner.
      allow delete: if request.auth != null && resource.data.permissions[request.auth.uid] == 'owner';
    }
  }
}